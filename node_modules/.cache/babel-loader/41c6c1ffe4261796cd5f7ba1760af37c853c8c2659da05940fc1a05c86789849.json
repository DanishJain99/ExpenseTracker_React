{"ast":null,"code":"var _jsxFileName = \"/Users/danish/Desktop/Courses/React/Project/src/components/Expenses/ExpensesChart.js\";\nimport Chart from \"../Chart/Chart\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ExpensesChart = () => {\n  const chartDataPoints = [{\n    label: 'Jan',\n    value: 0\n  }, {\n    label: 'Feb',\n    value: 0\n  }, {\n    label: 'Mar',\n    value: 0\n  }, {\n    label: 'Apr',\n    value: 0\n  }, {\n    label: 'May',\n    value: 0\n  }, {\n    label: 'June',\n    value: 0\n  }, {\n    label: 'July',\n    value: 0\n  }, {\n    label: 'Aug',\n    value: 0\n  }, {\n    label: 'Sept',\n    value: 0\n  }, {\n    label: 'Oct',\n    value: 0\n  }, {\n    label: 'Nov',\n    value: 0\n  }, {\n    label: 'Dec',\n    value: 0\n  }];\n  for (const exp in props.expenses) {\n    const expMonth = exp.date.getMonth();\n    chartDataPoints[expMonth].value += expense.amount;\n  }\n  return /*#__PURE__*/_jsxDEV(Chart, {\n    dataPounts: chartDataPoints\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n};\n_c = ExpensesChart;\nexport default ExpensesChart;\nvar _c;\n$RefreshReg$(_c, \"ExpensesChart\");","map":{"version":3,"names":["Chart","jsxDEV","_jsxDEV","ExpensesChart","chartDataPoints","label","value","exp","props","expenses","expMonth","date","getMonth","expense","amount","dataPounts","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/danish/Desktop/Courses/React/Project/src/components/Expenses/ExpensesChart.js"],"sourcesContent":["import Chart from \"../Chart/Chart\";\n\n\nconst ExpensesChart = () => {\n    const chartDataPoints = [\n        { label: 'Jan', value:0},\n        { label: 'Feb', value:0},\n        { label: 'Mar', value:0},\n        { label: 'Apr', value:0},\n        { label: 'May', value:0},\n        { label: 'June', value:0},\n        { label: 'July', value:0},\n        { label: 'Aug', value:0},\n        { label: 'Sept', value:0},\n        { label: 'Oct', value:0},\n        { label: 'Nov', value:0},\n        { label: 'Dec', value:0}\n\n    ]\n\n    for (const exp in props.expenses){\n        const expMonth = exp.date.getMonth();\n        chartDataPoints[expMonth].value += expense.amount;\n    }\n    return (\n        <Chart dataPounts = {chartDataPoints}/>\n    )\n}\n\nexport default ExpensesChart;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGnC,MAAMC,aAAa,GAAGA,CAAA,KAAM;EACxB,MAAMC,eAAe,GAAG,CACpB;IAAEC,KAAK,EAAE,KAAK;IAAEC,KAAK,EAAC;EAAC,CAAC,EACxB;IAAED,KAAK,EAAE,KAAK;IAAEC,KAAK,EAAC;EAAC,CAAC,EACxB;IAAED,KAAK,EAAE,KAAK;IAAEC,KAAK,EAAC;EAAC,CAAC,EACxB;IAAED,KAAK,EAAE,KAAK;IAAEC,KAAK,EAAC;EAAC,CAAC,EACxB;IAAED,KAAK,EAAE,KAAK;IAAEC,KAAK,EAAC;EAAC,CAAC,EACxB;IAAED,KAAK,EAAE,MAAM;IAAEC,KAAK,EAAC;EAAC,CAAC,EACzB;IAAED,KAAK,EAAE,MAAM;IAAEC,KAAK,EAAC;EAAC,CAAC,EACzB;IAAED,KAAK,EAAE,KAAK;IAAEC,KAAK,EAAC;EAAC,CAAC,EACxB;IAAED,KAAK,EAAE,MAAM;IAAEC,KAAK,EAAC;EAAC,CAAC,EACzB;IAAED,KAAK,EAAE,KAAK;IAAEC,KAAK,EAAC;EAAC,CAAC,EACxB;IAAED,KAAK,EAAE,KAAK;IAAEC,KAAK,EAAC;EAAC,CAAC,EACxB;IAAED,KAAK,EAAE,KAAK;IAAEC,KAAK,EAAC;EAAC,CAAC,CAE3B;EAED,KAAK,MAAMC,GAAG,IAAIC,KAAK,CAACC,QAAQ,EAAC;IAC7B,MAAMC,QAAQ,GAAGH,GAAG,CAACI,IAAI,CAACC,QAAQ,CAAC,CAAC;IACpCR,eAAe,CAACM,QAAQ,CAAC,CAACJ,KAAK,IAAIO,OAAO,CAACC,MAAM;EACrD;EACA,oBACIZ,OAAA,CAACF,KAAK;IAACe,UAAU,EAAIX;EAAgB;IAAAY,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAC,CAAC;AAE/C,CAAC;AAAAC,EAAA,GAxBKjB,aAAa;AA0BnB,eAAeA,aAAa;AAAC,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}